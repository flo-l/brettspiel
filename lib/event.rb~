# The Event class is the base class of all events.
# Every Event should sublass Event.

# Every Event has possibility points. The percentage with which the event occurs is calculated
# with these possibility points.

# Every Event is assigned to a character and has a text. Later eventually also sound etc may be added.

# An Event might occur just if the player visits the location in "investigate" or "hidden" mode. Also both are possible.
# The possible? method does whatever it want's to check if the event can occur and returns a boolean.

# The occur! method gets called if the event takes place.
# It can execute arbitrary code

# Sometimes it's necessary that an event occurs, in that case the necessary switch of the event
# can be turned to true and it will be preferred to normal events

class Event
  attr_reader   :character_id, :text, :investigate, :hidden
  attr_writer   :necessary
  attr_accessor :probability_points

  def initialize
    #this code should never get called
    raise NotImplementedError, "The initialize method of this event MUST be overridden!"
  end

  def necessary?; @necessary; end

  def character
    GAME.characters[@character_id]
  end

  #any event can happen by default, may be overridden
  def possible?; true; end

  def display!
    message(:character, @character_id, @text})
  end

  #sometimes nothing happens, may be overridden
  def occur!; nil; end

  # This takes a hash, whose values are options (strings) and asks the
  # player which they choose. It returns the key of the selected option
  def ask(player, question, options)
    message(:question, player.id, @character_id, question, options)
  end
end
